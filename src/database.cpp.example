#include <iostream>
#include <string>
#include <fstream>
#include <sstream>
#include "lib/database.hpp"
#include "lib/serialization.hpp"
using namespace std;

struct LoozStruct
{
    std::string a;
    int b;
    double c;
    float d;
    char e;
    bool f;
};

// Convert your struct into line of string
std::string toString(LoozStruct data)
{
    std::stringstream stringstream;

    // Append each part of the struct to the stringstream in the desired format
    stringstream << serializeString(data.a, "a")
                 << serializeInt(data.b, "b")
                 << serializeDouble(data.c, "c")
                 << serializeFloat(data.d, "d")
                 << serializeChar(data.e, "e")
                 << serializeBool(data.f, "f");

    // Convert the stringstream to a std::string and return it
    return stringstream.str();
}

// Convert a line of string into a struct
LoozStruct fromString(std::string dataString)
{
    LoozStruct account;

    account.a = getStringValueByKey(dataString, "a");
    account.b = getIntValueByKey(dataString, "b");
    account.c = getDoubleValueByKey(dataString, "c");
    account.d = getFloatValueByKey(dataString, "d");
    account.e = getCharValueByKey(dataString, "e");
    account.f = getBoolValueByKey(dataString, "f");

    return account;
}

int main()
{
    // Create 2 sample customer account
    LoozStruct accounts[1000];
    int accountCount = 0;

    LoozStruct data1;
    data1.a = "data1 string";
    data1.b = 1;
    data1.c = 1.2;
    data1.d = 3.4f;
    data1.e = 'c';
    data1.f = false;

    accounts[accountCount] = data1;
    accountCount++;

    LoozStruct data2;
    data2.a = "data2 string";
    data2.b = 10;
    data2.c = 9.8;
    data2.d = 7.6f;
    data2.e = 'f';
    data2.f = true;

    accounts[accountCount] = data2;
    accountCount++;

    for (int i = 0; i < accountCount; i++)
    {
        std::cout << toString(accounts[i]) << std::endl;
    }

    // Save array of CustomerAccount into account.txt
    std::string filename("example.txt");
    saveToFile(filename, &accounts[0], accountCount, toString);
    std::cout << "Saved " << accountCount << " record(s) to \"" << filename << "\"." << std::endl << std::endl;

    // Load accounts from account.txt into an array of CustomerAccount
    LoozStruct loadedAccounts[1000];
    int loadedAccountCount = 0;
    loadFromFile(filename, &loadedAccounts[0], fromString, &loadedAccountCount);
    for (int i = 0; i < loadedAccountCount; i++)
    {
        std::cout << toString(loadedAccounts[i]) << std::endl;
    }

    std::cout << "Loaded " << loadedAccountCount << " record(s)." << std::endl;
    return 0;
}
